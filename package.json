{
  "name": "filter-lines",
  "displayName": "Filter Lines",
  "description": "Quickly find all lines matching a string or regular expression",
  "icon": "doc/logo.png",
  "version": "1.1.0",
  "publisher": "earshinov",
  "repository": {
    "type": "git",
    "url": "https://github.com/earshinov/vscode-filter-lines"
  },
  "license": "MIT",
  "engines": {
    "vscode": "^1.67.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:filterlines.includeLinesWithRegex",
    "onCommand:filterlines.includeLinesWithString",
    "onCommand:filterlines.excludeLinesWithRegex",
    "onCommand:filterlines.excludeLinesWithString",
    "onCommand:filterlines.includeLinesWithRegexAndContext",
    "onCommand:filterlines.includeLinesWithStringAndContext",
    "onCommand:filterlines.excludeLinesWithRegexAndContext",
    "onCommand:filterlines.excludeLinesWithStringAndContext",
    "onCommand:filterlines.promptFilterLines",
    "onCommand:filterlines.filterLines"
  ],
  "main": "./out/extension",
  "contributes": {
    "commands": [
      {
        "title": "Filter Lines: Include Lines with Regex",
        "command": "filterlines.includeLinesWithRegex"
      },
      {
        "title": "Filter Lines: Include Lines with String",
        "command": "filterlines.includeLinesWithString"
      },
      {
        "title": "Filter Lines: Exclude Lines with Regex",
        "command": "filterlines.excludeLinesWithRegex"
      },
      {
        "title": "Filter Lines: Exclude Lines with String",
        "command": "filterlines.excludeLinesWithString"
      },
      {
        "title": "Filter Lines: Include Lines with Regex and Context",
        "command": "filterlines.includeLinesWithRegexAndContext"
      },
      {
        "title": "Filter Lines: Include Lines with String and Context",
        "command": "filterlines.includeLinesWithStringAndContext"
      },
      {
        "title": "Filter Lines: Exclude Lines with Regex and Context",
        "command": "filterlines.excludeLinesWithRegexAndContext"
      },
      {
        "title": "Filter Lines: Exclude Lines with String and Context",
        "command": "filterlines.excludeLinesWithStringAndContext"
      }
    ],
    "keybindings": [
      {
        "command": "filterlines.includeLinesWithRegex",
        "key": "ctrl-k ctrl-r",
        "mac": "cmd-k cmd-r"
      },
      {
        "command": "filterlines.includeLinesWithString",
        "key": "ctrl-k ctrl-s",
        "mac": "cmd-k cmd-s"
      }
    ],
    "configuration": {
      "title": "Filter Lines",
      "properties": {
        "filterlines.caseSensitiveStringSearch": {
          "type": "boolean",
          "default": false,
          "description": "If true, string searches are case-sensitive"
        },
        "filterlines.caseSensitiveRegexSearch": {
          "type": "boolean",
          "default": true,
          "description": "If true, regex searches are case-sensitive"
        },
        "filterlines.preserveSearch": {
          "type": "boolean",
          "default": true,
          "description": "If true, your latest search string or regex will be saved, and then restored for your next search. If false, the search string or regex will be blank"
        },
        "filterlines.lineNumbers": {
          "type": "boolean",
          "default": false,
          "description": "Show source file line numbers in results"
        },
        "filterlines.createNewTab": {
          "type": "boolean",
          "default": true,
          "description": "Create new tab for filter results"
        },
        "filterlines.indentContext": {
          "type": "boolean",
          "default": true,
          "description": "Indent context lines"
        },
        "filterlines.foldIndentedContext": {
          "type": "boolean",
          "default": true,
          "description": "Fold indented context lines"
        }
      }
    }
  },
  "scripts": {
    "clean": "rimraf out",
    "prebuild": "yarn run clean",
    "build": "tsc --noEmit -p . && babel src --out-dir out --extensions .js,.ts",
    "build:dev": "tsc --noEmit -p . && babel src --out-dir out --extensions .js,.ts --source-maps",
    "build:watch": "nodemon -e js,ts,json --watch src --watch .babelrc.js --exec \"babel src --out-dir out --extensions .js,.ts\"",
    "lint": "tslint -p .",
    "pretest": "env BABEL_ENV=coverage yarn run build && yarn run coverage:clean",
    "test": "node ./out/test/runTest.js && yarn run nyc check-coverage",
    "posttest": "yarn run coverage:report",
    "coverage:clean": "rimraf .nyc_output coverage",
    "coverage:report": "nyc report --reporter=lcov --reporter=text-summary",
    "vscode:prepublish": "yarn run clean && yarn run build"
  },
  "devDependencies": {
    "@babel/cli": "^7.1.5",
    "@babel/core": "^7.1.6",
    "@babel/node": "^7.7.4",
    "@babel/plugin-transform-runtime": "^7.10.1",
    "@babel/preset-env": "^7.1.6",
    "@babel/preset-typescript": "^7.7.2",
    "@babel/register": "^7.0.0",
    "@earshinov/tslint-rules": "earshinov/tslint-rules#v1.0.0",
    "@types/assert": "^1.4.7",
    "@types/glob": "^7.1.2",
    "@types/mocha": "^7.0.2",
    "@types/node": "^10.0.0",
    "@types/sinon": "^9.0.4",
    "@types/vscode": "^1.67.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.3.9",
    "assert": "^2.0.0",
    "babel-plugin-istanbul": "^6.0.0",
    "codecov": "^3.8.3",
    "glob": "^7.1.6",
    "mocha": "^7.2.0",
    "nodemon": "^2.0.1",
    "nyc": "^15.1.0",
    "ovsx": "^0.8.3",
    "rimraf": "^3.0.2",
    "sinon": "^9.0.2",
    "test-exclude": "j03m/test-exclude#j03m/fix2",
    "tslint": "^5.19.0",
    "typescript": "^4.9.5",
    "vsce": "^2.15.0"
  },
  "nyc": {
    "include": [
      "src/**/*.ts"
    ],
    "exclude": [
      "src/test/**/*.ts"
    ],
    "require": [
      "@babel/register"
    ],
    "sourceMap": false,
    "instrument": false,
    "checkCoverage": true,
    "branches": 80,
    "lines": 95,
    "functions": 95,
    "statements": 95
  },
  "packageManager": "yarn@1.22.1"
}
